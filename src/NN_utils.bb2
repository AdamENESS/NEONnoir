; =============================================================================
; NN_utils
; -----------------------------------------------------------------------------
; Various game utilities
; =============================================================================

DEFTYPE .b IN_prev_state
IN_prev_state = 0

#IN_mouse_none = 0
#IN_mouse_pressed = 1
#IN_mouse_released = 2
#IN_mouse_held = 3

Function .b IN_update_mouse{}
  SHARED IN_prev_state

  curr.b = Joyb(0) AND %0001   ; Isolate left mouse button
  prev.b = IN_prev_state
  IN_prev_state = curr

  ; The possible mouse states
  ; Prev | Curr | Meaning
  ;    0 |    0 | None
  ;    0 |    1 | Pressed
  ;    1 |    0 | Released
  ;    1 |    1 | Held
  value.b = (prev LSL 1) OR (curr)
;  !DB_printf{"*********** prev %d - curr %d = value %d", prev, curr, value}
  Function Return value
End Function

BLITZ

Function .b IN_check_mouse{screen_rects.l, count.w}
  DEFTYPE .NN_screen_rect *rect
  DEFTYPE .b result
  DEFTYPE .w x, y

  x = MouseX
  y = MouseY
  result = -1

  *rect = screen_rects
  For r = 0 To count - 1
    If x >= *rect\x0 AND x < *rect\x1 AND y >= *rect\y0 AND y < *rect\y1

      Function Return r
    End If

    *rect + (SizeOf .NN_screen_rect)
  Next

  Function Return result
End Function

Statement FadeInScreen{cop, source, dest}
  SHARED NN_fade_in
  InitPalette dest, 256
  For i = 25 To 0 Step -1
    FadePalette source, dest, 1-i/25
    VWait
    DisplayPalette cop, dest
  Next

  NN_fade_in = False
End Statement

Statement FadeOutScreen{cop, source, dest}
  SHARED NN_fade_out
  InitPalette dest, 256
  For i = 0 To 25
    FadePalette source, dest, 1-i/25
    VWait
    DisplayPalette cop, dest
  Next

  NN_fade_out = False
End Statement

AMIGA